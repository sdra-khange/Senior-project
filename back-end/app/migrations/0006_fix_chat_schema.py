# Generated by Django 5.1.3 on 2025-06-11 16:06

from django.db import migrations


def fix_chat_schema(apps, schema_editor):
    """
    Fix the chat schema by adding missing columns
    """
    db_alias = schema_editor.connection.alias

    # SQL to add missing columns to existing tables
    sql_commands = [
        # Add missing columns to app_chatroom
        "ALTER TABLE app_chatroom ADD COLUMN IF NOT EXISTS description TEXT NULL;",
        "ALTER TABLE app_chatroom ADD COLUMN IF NOT EXISTS room_type VARCHAR(20) NOT NULL DEFAULT 'individual';",
        "ALTER TABLE app_chatroom ADD COLUMN IF NOT EXISTS created_by_id BIGINT NULL;",
        "ALTER TABLE app_chatroom ADD COLUMN IF NOT EXISTS is_active TINYINT(1) NOT NULL DEFAULT 1;",
        "ALTER TABLE app_chatroom ADD COLUMN IF NOT EXISTS is_archived TINYINT(1) NOT NULL DEFAULT 0;",

        # Add missing columns to app_chatparticipant if it exists
        "ALTER TABLE app_chatparticipant ADD COLUMN IF NOT EXISTS user_id BIGINT NOT NULL;",
        "ALTER TABLE app_chatparticipant ADD COLUMN IF NOT EXISTS room_id BIGINT NOT NULL;",
        "ALTER TABLE app_chatparticipant ADD COLUMN IF NOT EXISTS joined_at DATETIME(6) NOT NULL DEFAULT NOW(6);",
        "ALTER TABLE app_chatparticipant ADD COLUMN IF NOT EXISTS left_at DATETIME(6) NULL;",
        "ALTER TABLE app_chatparticipant ADD COLUMN IF NOT EXISTS is_active TINYINT(1) NOT NULL DEFAULT 1;",
        "ALTER TABLE app_chatparticipant ADD COLUMN IF NOT EXISTS notifications_enabled TINYINT(1) NOT NULL DEFAULT 1;",
        "ALTER TABLE app_chatparticipant ADD COLUMN IF NOT EXISTS last_read_at DATETIME(6) NOT NULL DEFAULT NOW(6);",

        # Add missing columns to app_chatmessage if it exists
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS room_id BIGINT NOT NULL;",
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS sender_id BIGINT NULL;",
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS message_type VARCHAR(20) NOT NULL DEFAULT 'text';",
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS content TEXT NOT NULL;",
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS is_edited TINYINT(1) NOT NULL DEFAULT 0;",
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS is_deleted TINYINT(1) NOT NULL DEFAULT 0;",
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS deleted_at DATETIME(6) NULL;",
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS file_url VARCHAR(200) NULL;",
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS file_name VARCHAR(255) NULL;",
        "ALTER TABLE app_chatmessage ADD COLUMN IF NOT EXISTS file_size INT UNSIGNED NULL;",
    ]

    with schema_editor.connection.cursor() as cursor:
        for sql in sql_commands:
            try:
                cursor.execute(sql)
            except Exception as e:
                print(f"Warning: Could not execute {sql}: {e}")


def reverse_fix_chat_schema(apps, schema_editor):
    """
    Reverse the schema fix (not implemented for safety)
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0005_add_chat_models'),
    ]

    operations = [
        migrations.RunPython(fix_chat_schema, reverse_fix_chat_schema),
    ]
